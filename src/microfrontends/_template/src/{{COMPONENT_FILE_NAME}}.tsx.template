import { useState, useEffect } from 'react';
import s from './styles.module.css';
import type { {{COMPONENT_NAME}}Props } from './types';
export const {{COMPONENT_NAME}} = ({
  // Добавьте необходимые пропсы здесь
  title,
  description,
  di,
}: {{COMPONENT_NAME}}Props) => {
  const [isLoaded, setIsLoaded] = useState(false);

  /* @FIXME: Если создаваемый вами компонент не привязан к какой-либо платформе, 
   но при этом для адаптивной верстки вам нужно понимать, какое устройство 
   задействуется в момент рендера компонента, вы можете использовать 
   di.layout и/или di.userAgent. Для настройки темизации также можно 
   использовать соответствующее поле di.theme. 
   Описание типов более подробно можно изучить по пути src/microfrontends/{{MICROFRONTEND_NAME}}/types.ts */

  const { theme } = di;

  useEffect(() => {
    // Инициализация компонента
    setIsLoaded(true);
  }, []);

  return (
    <div className={s.root}>
      <div className={s.container}>
        <h1 className={s.title}>{title}</h1>
        {description && <p className={s.description}>{description}</p>}
        {/* Добавьте ваш контент здесь */}
      </div>
    </div>
  );
};
